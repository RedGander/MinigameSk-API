# MinigameSk
# Started By portapipe
# Made by community: (your name will be here when you'll add your commits)
# bcroca | Reptar_

# Variables:
# https://github.com/portapipe/MinigameSk/blob/master/guidelines/variables%20list




# # More Info

# other possible flags: blockPlace,blockBreak,gamemode,lobby,checkpoint,reset,startTime(waiting type),reward

# I don't know about: defaultWinner,blockDrop,itemPickup,itemDrop,restoreBlocks,unlimitedAmmo,

# Spectator? With "Plus" we can hide spectator from players and give them fly, nodrop, nohit, notarget...

# # End More Info




options:
	tag : <blue>[<yellow>Minigame<blue>] <reset>
	separator: "<blue>####################<reset>"
	version : "V.01"




#--- LANGUAGE ---------------------------------------------------

	langPlayer 			:	Player
	langPoint			:	Points
	langJoin			:	Join
	langPlay			:	Play
	langClickJoin		:	Click to join
	langNameUsed		:	An Arena with this name already exists!
	langAvailableMgs	:	List of available minigames

#--- END LANGUAGE ---------------------------------------------------



command /minigame [<text>] [<text>] [<text>] [<text>]:
	usage: <green>mg join/quit/list arena <reset>- <red>staff: mg create/delete/flag arena flagType flagValue
	aliases: mg,mgm
	permission: mg.user
	trigger:



#-------GENERAL COMMANDS---------

		if arg 1 is not set:
			message "{@separator}"
			message "{@tag}Minigame Plugin {@version}, made by the community"
			wait 1 second
			if player don't have permission "mg.mod" or "mg.admin":
				make player execute command "mg menu"
				stop
				
				
			
			
			
		if arg 1 is "list":
			message "{@separator}"
			message "{@tag}{@langAvailableMgs}:"
			set {_listMgs} to ""
			loop {mgl::*}:
				{mgo.%loop-index%::enabled} is true
				set {_listMgs} to "%{_listMgs}% <yellow>%loop-value% "
			message "%{_listMgs}%"
			
			
		if arg 1 is "join":
			message "{@separator}"
			message "{@tag}This will be the join command, joining minigame %arg 2%"
		
		if arg 1 is "quit":
			message "{@separator}"
			message "{@tag}This will be the quit command"
			if arg 2 is set:
				message "The player %arg 2% will quit from his current minigame"

		
		if arg 1 is "menu":
			set {_i} to 1
			set {_items} to ""
			loop {mgl::*}:
				{mgo.%loop-index%::enabled} is true
				set {_items} to "s;%{_i}%;i;wool;n;&3{@langPlay} %loop-value%;l;&2&l{@langClickJoin} %loop-value%.;c;pe %player% /mg join %loop-index%;%{_items}%"
				add 1 to {_1}
			#We add 1 to the number for the exit slot
			add 1 to {_i}
			set {_rows} to ceil({_i}/9) #round the rows needed to be displayed on the GUI
			set {_items} to "s;%%{_rows}%*9%;i;red wool;n;&4&l[X];%{_items}%"
			show "%{_items}%" with {_rows} rows named "&3Minigames" to player
		


#-------STAFF COMMANDS---------
		
		if arg 1 is "create","delete" or "flag":
			arg 2 is set
			message "{@separator}"
			message "{@tag}STAFF Commands"
			
			if arg 1 is "create":
				if {mgl::%arg 2%} is set:
					message "{@tag}<red>{@langNameUsed}"
					stop
				set {mgl::%arg 2%} to arg 2
				message "{@tag}<green>Minigame %arg 2% created succesfully! Creating default options..."
				
				
				# Default options for the new minigame (using string because it's a text argument)
				set {mgo.%arg 2%::enabled} to "FALSE"
				set {mgo.%arg 2%::minPlayers} to "2"
				set {mgo.%arg 2%::score} to "2"
				# We'll parse the numbers above when we'll use it!
		
			if arg 1 is "delete":
				if {mgl::%arg 2%} is not set:
					message "{@tag}<red>The selected arena doesn't exists!"
					stop
				delete {mgl::%arg 2%}
				delete {mgo.%arg 2%::*}
				delete {mgc.%arg 2%::*}
				delete {mgo.%arg 2%::*}
				
				#We should teleport the users inside the arena outside the deleted arena




#---EDITING OPTION --------

command /mgo <text> [<text>] [<text>]:
	permission: mg.admin
	usage: /mgo <arenaName> <option> <newValue>
	description: It has to be used for change option for a single arena
	trigger:
		
		#It should never be empty so...
		if arg 1 is not set:
			message "<red>Args?!?"
			stop
		
		if arg 2 is "menu":
			message "Show the GUI menu for the arena passed as Arg 1"
			stop
		
		



#ALIASES FOR DEDICATED OR MG BASED SERVER
command /join <text>:
	trigger:
		make player execute console command "mg join %arg 1%"
		
command /quit <player>:
	aliases: esc,exit,leave
	trigger:
		if arg 1 is not set:
			make player execute console command "mg quit"
		else:
			execute console command "mg quit %arg 1%"
#END ALIASES



#SCOREBOARD
command /sb <text> <text> [<offline player>] [<integer>]:
	usage: sb <add/remove/set/create/delete> <scoreboard> [player] [points]
	permission: mg.scoreboard
	trigger:
		
		if arg 1 is "create" or "delete":
			message "{@tag}Create or delete a scoreboard with Sk+"
			
			
		if arg 1 is "add","remove" or "set":
			message "{@tag}%arg 1% points to player %arg 3% to scoreboard %arg 2%"
#END SCOREBOARD



#SUDO command
command /playerexecute <player> <text>:
	aliases: pe, sudo
	executable by: console
	trigger:
		execute argument 1 command "%argument 2%"



#----------- EVENTS ----------
#
on right click on sign:
	line 1 of block is "&4[Minigame]"
	if line 2 of block is "&5[Join]":
		add player to {mgc.%line 3 of block%::players}
		add 1 to {mgc.%line 3 of block%::totPlayers}
	
		#Write number of current player to the sign
		#Check if maxPlayers flag is set, else there's no limit to the number of players
		set {_maxPlayers} to ""
		if {mg.arena.flag.%line 3 of block%::maxPlayers} is set:
			set {_maxPlayers} to "/%{mg.arena.flag.%line 3 of block%::maxPlayers}%"
	
		set line 4 of the block to "Players: %{mg.current.%line 3 of block%::totPlayers}%%{_maxPlayers}%"
	
		teleport player to {mgo.%line 3 of block%::lobby}
		message "{@tag}You have been teleported to the lobby of: %line 3 of block%."
		stop

on sign change:
	line 1 of block is "&4[Minigame]"
	if player don't have permission "mg.staff":
		message "{@tag}&4You don't have the required permission to create minigames sign!"
		stop
	if line 2 of block is "&5[Join]":
		if line 3 of block is "":
			cancel event
			message "{@tag}&4You have to insert an existing minigame arena name in the third line!"
			stop
		if {mgl::%line3 of block%} is not set:
			set line 1 of block to "<red><strong>Fix This!"
			set line 3 of block to "<red><strong>Name Error!"
			stop
			
		set {mgc.%line 3 of block%::totPlayers} to 0
		set line 4 of the block to "Players: 0/%{mgo.%line 3 of block%::maxPlayers}%"



#MENU SYSTEM
on right click with stick:
	make player execute command "mg menu"