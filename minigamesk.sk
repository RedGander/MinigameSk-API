# MinigameSk
# Started By portapipe
# Made by community: (your name will be here when you'll add your commits)
# bcroca | Otakunight 

# Variables
options:
#Game Parameters:
	winkills: 30				#How many kills lead to a win
	wincaptures: 3				#How many flag/stuff captures lead to a win
	maxplayers: 20				#Maximal numbers of players in one arena 
	minplayers: 3				#Minimal number of players in one arena
	maxspawns: 10				#Maximal number of spawns an arena can have
	votestart: 1				#Number of players that have to vote for start
	#Team only options
	friendlyfire: false			#If teammates can hurt each other (Negative potions effects will still be applied)
	teams: 2				#Number of maximum Teams
	autoteams: 2				#Teams that will automatically used by the Autobalance system
	autoplayers: 2				#DONT SET THIS TO 1 OR 0!!! Number of players that can be in a different team before autobalance tries to distribute players evenly
	ingamebalance: true			#If the automatic balancing should occur if players leave an running game
	scramble: true				#Automatically scramble all players
	superiorscramble:999			#How superior a team has to be vs another to cause a scramble
	loosepoints: false			#If player loses points when leaving
	
#Damage types:
	respawn: 0				Delay in seconds before spawning again (in competive gamemodes)
	saferespawn: 10				#Minimal Distance from other players when respawning (if possible)
	realdeath: true				#If you really get killed or just get ported to lobby to wait for respawn (should be off for factions[you would lose power otherwise])
	hurting: true				#If you can get damaged by anything(except players)
	naturaldeath: true			#If you can get killed by natural causes (if false you will survive everything with a half hearth)
	physicskill: false			#If falling/lava/fire kills you instantly 
	firekill: false				#If burning Kills instantly
	lavakill: true				#If Lava Kills instantly
	drowning: false				#If consuming air (going underwater) instantly kills
	
#Administrating Stuff
	prefix: <magic>aaa<green>Ultimate Arena<reset><magic>aaa<reset> 	#The prefix shown before every message
	admin.permission: Arena.admin								#The everything permission now with 20% more everything
	build.permission : Arena.build 								#Allows people to build Arenas
	mod.permission: Arena.mod									#Allows people to forcestart end or whatever but not to build
	use.permission: Arena.use									#Allows people to use the Arena
	command.signs: {@use.permission}							#Allows people to create automatic paintball command signs (you might want to make this an vip feature)



# ################################################################################## #
# ##########################Common Messages in English:############################# #
# ################################################################################## #
	NotPlayable: %argument 1% can't be played on this server.		#Argument 1 will be the type of the arena
	NotExisting: %argument 2% can't be found.						#Argument 2 will be the name of the arena
	NotFinished: This arena is missing some stuff.
	AlreadyIngame:	Leave your current game before joining a new one
	Full: This arena is already full.
	NotFull: This arena needs more players to start
	Joining: You succesfully entered the %argument 1% arena %argument 2%
	Leaving: You left the %argument 1% arena %argument 2%
	Vote: You succesfully voted for starting the Arena
	Cannotvote: You can't vote now...
	Didvote: You already voted
	Novotes: Not enough players voted to start the arena
	Starting: Starting %{Arena.%player%.game}% game in %{Arena.%player%.lobby}%
	Winning: %{Arena.%{_player}%.team}%& Team%{Arena.%{_player}%.team}% has won the game in the %argument 1% Arena %argument 2%
# ################################################################################## #
# ################################################################################## #
# ################################################################################## #


### Flags are the settings of each arena, all under 1 simple list of a variable
# - Arena.arenagametype.arenaName::minPlayers|maxPlayers|team(number)|lobby|spawn(team or single)|and so on...

# Spectator? With "Plus" we can hide spectator from players and give them fly, nodrop, nohit, notarget...


command /Arena <text> [<text>] [<text>]:
	description: join a nice Arena
	usage: /Arena %arenatype% %arenaname%
	permission:	Arena.use
	trigger:
		if argument 3 is set:
			set {_prefix} to argument 3
		if argument 3 is not set:
			set {_prefix} to "{@prefix}"
		if argument 1 is "leave":
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::win} is false:
				if {@loosepoints} is true:
					reduce {Arena.%player%.%{Arena.%player%.game}%} by {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%.players::%player%}
			set {Arena%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::players::%player%} to 0
			remove 1 from {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::players}
			teleport player to {Arena.%player%.location}
			clear {Arena.%player%.lobby}
			clear {Arena.%player%.game}
			stop
		if argument 1 is "votestart":
			if  {Arena.%player%.game} is not set:
				message "%{_prefix}% {@Cannotvote}"
				stop
			if {Arena.%player%.votestart} is true:
				message "%{_prefix}% {@Didvote}"
			if {Arena.%player%.votestart} is false:
				set {Arena.%player%.votestart} to true
				message "%{_prefix}% {@Vote}"
			loop {Arena.%argument 1%.%argument 2%.players::*}:
				if {Arena.%loop-value%.team} is set:
					add 1 to {_team.%{Arena.%loop-value%.team}%} 
				if {Arena.%loop-value%.votestart} is true:
					add 1 to {_votestart}
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::minplayers} is not set:
				set {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::minplayers} to {@minplayers}
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::players} is smaller than {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::minplayers}:
				message "%{_prefix}% {@NotFull}"
				stop
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::votestart} is set:
				if {_votestart} is smaller than {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::votestart}:
					message "%{_prefix}% {@Novotes}"
					stop
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::votestart} is not set:
				if {_votestart} is smaller than {@votestart}:
					message "%{_prefix}% {@Novotes}"
					stop
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::scramble} is not set:
				set {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::scramble} to {@scramble}
			if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::scramble} is true:
				set {_scrambler} to 1
				if {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::teams} is not set:
					set {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::teams} to {@teams}
				loop {Arena.%argument 1%.%argument 2%.players::*}:
					if {_scrambler} is {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::teams}:
						set {_scrambler} to 1
					set {Arena.%loop-value%.team} to {_scrambler}
					broadcast "Set team of %player% to %{_scrambler}%"
			set {_wait} to now
			while difference between {_wait} and now is less than 10 seconds:
				set {_diff} to difference between {_wait} and now
				set {_diff} to {_diff}-10
				set {_diff} to {_diff}*-1
#				loop {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::players::*}:
#					set {_player} to loop-index
#					send "%{_prefix}% %{_diff}% seconds till game start" to {_player}
				send "%{_prefix}% %{_diff}% seconds till game start" to {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%.players::*}
				wait 1 second
			broadcast "%{_prefix}% {@Starting}"	
			loop {Arena.%argument 1%.%argument 2%.players::*}:
				execute console command "/Arenacommand balance %{Arena.%player%.game}% %{Arena.%player%.lobby}%"
				execute console command "/Arenacommand spawn %loop-index%"
			stop
		if argument 1 is "paintball":
			if {@paintball} is not true:
				message "%{_prefix}% {@NotPlayable}"
				stop
		if argument 1 is "Rush":
			if {@Rush} is not true:
				message "%{_prefix}% {@NotPlayable}"
				stop
		if argument 1 is "Rush" or "paintball":
			if {Arena.%player%.lobby} is not argument 2:
				message "%{_prefix}% {@AlreadyIngame}"	
				stop
			if {Arena.%argument 1%.%argument 2%::lobby} is not set:
				message "%{_prefix}% {@NotExisting}"
				stop
			if argument 1 is "paintball":
				if {Arena.%argument 1%.%argument 2%::spawns} is 0:
					message "%{_prefix}% {@NotFinished}"
					stop
			if argument 1 is "Rush":
				if {Arena.%argument 1%.%argument 2%.1::lobby} is not set:
					message "%{_prefix}% {@NotFinished}"
					stop
				if {Arena.%argument 1%.%argument 2%.2::lobby} is not set:
					message "%{_prefix}% {@NotFinished}"
					stop
			if {Arena.%argument 1%.%argument 2%::maxplayers} is not set:
				set {Arena.%argument 1%.%argument 2%::maxplayers} to {@maxplayers}
			if {Arena.%argument 1%.%argument 2%::players} is equal to {Arena.%argument 1%.%argument 2%::maxplayers}:
				message "%{_prefix}% {@Full}"
				stop
			set {Arena.%argument 1%.%argument 2%::players::%player%} to 0
			add 1 to {Arena.%argument 1%.%argument 2%::players}
			set {Arena.%player%.location} to location of player
			teleport player to {Arena.%argument 1%.%argument 2%::lobby}
			set {Arena.%player%.lobby} to argument 2
			set {Arena.%player%.game} to argument 1
			message "%{_prefix}% {@Joining}"


#
#----------- Setting ----------
#


#
#----------- EVENTS ----------
#
on sign change:
	if line 1 of event-block is "[Arena]":
		if player does not have permission {@command.signs}:
			message "I am afraid I can't let you do that"
			stop
on rightclick on sign:
	if line 1 of event-block is "[Arena]":
		if line 2 of event-block is "join":
			make player execute command "/Arena %line 3 of event-block%"
			stop
		make player execute command "/Arena %line 3 of event block% %line 2% of event-block%"
	if line 1 of event-block is "[paintball]":
		if line 2 of event-block is "join":
			make player execute command "/paintball %line 3 of event-block%"
			stop
		make player execute command "/paintball %line 2 of event-block%"

on place:
	if {Arena.%player%.game} is set:
		add location of block to {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::rollback::*}
		set {Arena.blocktype.%location of block%} to air
on break:
	if {Arena.%player%.game} is set:
		add location of block to {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::rollback::*}
		set {Arena.blocktype.%location of block%} to event-block		
on respawn:
	if {Arena.%{Arena.%{_player}%.game}%.%{Arena.%{_player}%.lobby}%::respawn} is not set:
		set {Arena.%{Arena.%{_player}%.game}%.%{Arena.%{_player}%.lobby}%::respawn} to {@respawn}
	set {_time} to difference between {Arena.%player%.respawn} and {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::respawn}
	execute console command "/Arenacommand respawn %victim% in %{_time}% "
	
on quit:
	if {Arena.%player%.game} is set:
		if {@loosepoints} is true:
			reduce {Arena.%player%.%{Arena.%player%.game}%} by {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%.players::%player%}
		execute console command "/Arenacommand balance %{Arena.%player%.game}% %{Arena.paintball.%player%.lobby}%"
		set {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%.players::%player%} to 0
		remove 1 from {Arena.%{Arena.%player%.game}%.%{Arena.%player%.lobby}%::players}
		teleport player to {Arena.%player%.location}
		clear {Arena.%player%.lobby}
		clear {Arena.%player%.game}
on respawn:
	if {Arena.paintball.%player%.location} is set:
		teleport player to {Arena.paintball.%player%.location}
		clear {Arena.paintball.%player%.location}
on damage:
	if {Arena.%victim%.game} is set :
		if attacker is not a player:
			if {@hurting} is false:
				cancel event
		if {Arena.%attacker%.team} is {Arena.%victim%.team}:
			if {@friendlyfire} is false:
				send "Stop Attacking your Teammates" to attacker
				stop
		if  {Arena.%victim%.game} is "paintball":
			if projectile is an snowball:
				if {@realdeath} is true:
					kill victim
					set {Arena.%victim%.respawn} to now
					stop
				if {@realdeath} is false:
					set damage to 0
					heal the victim
					set {Arena.%victim%.respawn} to now
					stop
					execute console command "/Arenacommand respawn %victim%"
				execute console command "/Arenacommand score %attacker%"
		if health of victim is 0.5:
			if attacker is not an player:
				if {@naturaldeath} is false:
					set damage to 0
