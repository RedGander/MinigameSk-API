# MinigameSk
# Started By portapipe
# Made by community: (your name will be here when you'll add your commits)
# bcroca | Otakunight

# Variables:
# - mg.arena.name::arenaName
### The current variable is made for the current game
# - mg.current.arenaName::players
### Flags are the settings of each arena, all under 1 simple list of a variable
# - mg.arena.flag.arenaName::minPlayers|maxPlayers|score|scoreType|team(true-false)|type(addon!)|lobby|spawn(team or single)|quit|timer|lateJoin|enabled|lives|pvp(true or false)|

# other possible flags: blockPlace,blockBreak,gamemode,lobby,checkpoint,reset,startTime(waiting type),reward

# I don't know about: defaultWinner,blockDrop,itemPickup,itemDrop,restoreBlocks,unlimitedAmmo,

# Spectator? With "Plus" we can hide spectator from players and give them fly, nodrop, nohit, notarget...

options:
	tag : <blue>[<yellow>Minigame<blue>] <reset>
	separator: "<blue>####################<reset>"
	version : "V.01"

command /minigame [<text>] [<text>] [<text>] [<text>]:
	usage: <green>mg join/quit/list arena <reset>- <red>staff: mg create/delete/flag arena flagType flagValue
	aliases: mg,mgm
	permission: mg.active
	trigger:

		if arg 1 is not set:
			message "{@separator}"
			message "{@tag}Minigame Plugin {@version}, made by the community"
			message "<orange>list: <yellow>List of available minigames"
			message "<orange>join <purple><minigame>: <yellow>Join to a specific minigame"
			
		if arg 1 is "list":
			message "{@separator}"
			message "{@tag}List of available minigames:"
			message "<yellow>%{mg.arena.name::*}%"
			
		if arg 1 is "join":
			message "{@separator}"
			message "{@tag}This will be the join command, joining minigame %arg 2%"
		
		if arg 1 is "quit":
			message "{@separator}"
			message "{@tag}This will be the quit command"
			if arg 2 is set:
				message "The player %arg 2% will quit from his current minigame"




#-------STAFF COMMANDS---------
		
		if arg 1 is "create","delete" or "flag":
			arg 2 is set
			message "{@separator}"
			message "{@tag}STAFF Commands"
			
			if arg 1 is "create":
				if {mg.arena.name::%arg 2%} is set:
					message "{@tag}<red>Il nome dell'arena Ã¨ giÃ  utilizzato!"
					stop
				set {mg.arena.name::%arg 2%} to arg 2
				message "{@tag}<green>Minigame %arg 2% created succesfully! Creating default flags..."
				# Default flags for the new minigame (using string because it's a text argument)
				set {mg.arena.flag.%arg 2%::enabled} to "FALSE"
				set {mg.arena.flag.%arg 2%::minPlayers} to "2"
				set {mg.arena.flag.%arg 2%::score} to "2"
				# We'll parse the numbers above when we'll use it!
		
			if arg 1 is "delete":
				if {mg.arena.name::%arg 2%} is not set:
					message "{@tag}<red>L'arena selezionata non esiste!"
					stop
				delete {mg.arena.name::%arg 2%}
				delete {mg.arena.flag.%arg 2%::*}
				#Dovremmo teleportare eventuali player nell'arena selezionata




#ALIASES FOR DEDICATED OR MG BASED SERVER
command /join <text>:
	trigger:
		make player execute console command "mg join %arg 1%"
		
command /quit <player>:
	aliases: esc,exit,leave
	trigger:
		if arg 1 is not set:
			make player execute console command "mg quit"
		else:
			execute console command "mg quit %arg 1%"
#END ALIASES



#SCOREBOARD
command /sb <text> <text> [<offline player>] [<integer>]:
	usage: sb <add/remove/set/create/delete> <scoreboard> [player] [points]
	permission: mg.scoreboard
	trigger:
		
		if arg 1 is "create" or "delete":
			message "{@tag}Create or delete a scoreboard"
			
			
		if arg 1 is "add","remove" or "set":
			message "{@tag}%arg 1% points to player %arg 3% to scoreboard %arg 2%"
#END SCOREBOARD



#SUDO command
command /playerexecute <player> <text>:
	aliases: pe, sudo
	executable by: console
	trigger:
		execute argument 1 command "%argument 2%"



#----------- EVENTS ----------
#
on right click on sign:
	line 1 of block is "&4[Minigame]"
	if line 2 of block is "&5[Join]":
		add player to {mg.current.%line 3 of block%::players}
		add 1 to {mg.current.%line 3 of block%::totPlayers}
	
		#Write number of current player to the sign
		#Check if maxPlayers flag is set, else there's no limit to the number of players
		set {_maxPlayers} to ""
		if {mg.arena.flag.%line 3 of block%::maxPlayers} is set:
			set {_maxPlayers} to "/%{mg.arena.flag.%line 3 of block%::maxPlayers}%"
	
		set line 4 of the block to "Players: %{mg.current.%line 3 of block%::totPlayers}%%{_maxPlayers}%"
	
		teleport player to {mg.arena.flag.%line 3 of block%::lobby}
		message "{@tag}You have been teleported to the lobby of: %line 3 of block%."
		stop

on sign change:
	line 1 of block is "&4[Minigame]"
	if player don't have permission "mg.staff":
		message "{@tag}&4You don't have the required permission to create minigames sign!"
		stop
	if line 2 of block is "&5[Join]":
		if line 3 of block is "":
			cancel event
			message "{@tag}&4You have to insert an existing minigame arena name in the third line!"
			stop
			
		set {mg.current.%line 3 of block%::totPlayers} to 0
		set line 4 of the block to "Players: %{total.players}%"



#MENU SYSTEM
on right click with stick:
	set {_i} to 1
	set {_items} to ""
	loop {mg.arena.name::*}:
		{mg.arena.flag.%loop-index%::enabled} is "TRUE"
		set {_items} to "s;%{_i}%;i;wool;n;&3Play %loop-index%;l;&2Click to join %loop-index%.;c;pe %player% /join %loop-index%;%{_items}%"
		add 1 to {_1}
	#We add 1 to the number for the exit slot
	add 1 to {_i}
	if {_i} is less than 10:
		set {_rows} to 1
	else:
		if {_i} is between 10 and 18:
			set {_rows} to 2
		else:
			if {_i} is between 19 and 27:
				set {_rows} to 3
			else:
				set {_rows} to 4
	set {_items} to "s;%%{_rows}%*9%;i;red wool;n;&4&lEXIT;%{_items}%"
	show "%{_items}%" with {_rows} rows named "&3Minigames" to player